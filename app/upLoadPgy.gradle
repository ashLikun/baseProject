def run = { extension, buildUpdateDescription ->
    //在这里获取: https://www.pgyer.com/doc/view/api#uploadApp
    String pgyerApiKey = ''
    extension.android.applicationVariants.all { variant ->
        //这里只是打Release
        if (!variant.buildType.isDebuggable()) {
            variant.outputs.each { out ->
                def outputFile = out.outputFile
                logger.log(LogLevel.ERROR, "开始上传蒲公英的文件${outputFile} \n")
                if (outputFile != null) {
                    logger.log(LogLevel.ERROR, "start up load apk file : ${outputFile.absolutePath}")
                    def uploadCommand = "curl -F \"file=@${outputFile.absolutePath}\" -F \"_api_key=$pgyerApiKey\" -F " +
                            "\"buildUpdateDescription=$buildUpdateDescription\" -F \"buildInstallType=2\" -F \"buildPassword=123\" https://www.pgyer.com/apiv2/app/upload"
                    Runtime runtime = Runtime.getRuntime()
                    Process p = runtime.exec(uploadCommand)
                    InputStream fis = p.getInputStream()
                    InputStreamReader isr = new InputStreamReader(fis)
                    BufferedReader br = new BufferedReader(isr)
                    String line = null
                    logger.log(LogLevel.ERROR, "upload result :\n")
                    while ((line = br.readLine()) != null) {
                        logger.log(LogLevel.ERROR, "$line\n")
                        def startStr = "\"buildShortcutUrl\":\""
                        int start = line.indexOf(startStr) + startStr.length()
                        int end = line.indexOf("\"", start)
                        if (start > 0 && end > 0) {
                            String sUrl = line.substring(start, end)
                            //这里打开网页下载地址
//                            runtime.exec("cmd   /c   start  https://www.pgyer.com/$sUrl")
                        }
                    }
                    br.close()
                    isr.close()
                    fis.close()
                }
            }
        }
    }
}

project.ext {
    upload2d = { extension, buildUpdateDescription ->
        extension.android {
            //上传VinkaLife
            task uploadVinkaLife(group: 'upload2Pgyer', description: '打包上传VinkaLife 到蒲公英',
                    dependsOn: ['assembleVinkaLifeRelease']) {
                doLast {
                    run(extension, buildUpdateDescription)
                }
            }
            //上传Eraddar
            task uploadEraddar(group: 'upload2Pgyer', description: '打包上传Eraddar 到蒲公英',
                    dependsOn: ['assembleZ_eraddarRelease']) {
                doLast {
                    run(extension, buildUpdateDescription)
                }
            }
            //上传mixte
            task uploadMixte(group: 'upload2Pgyer', description: '打包上传VinkaLife 到蒲公英',
                    dependsOn: ['assembleZ_mixteRelease']) {
                doLast {
                    run(extension, buildUpdateDescription)
                }
            }
            //上传neomouv
            task uploadNeomouv(group: 'upload2Pgyer', description: '打包上传neomouv 到蒲公英',
                    dependsOn: ['assembleZ_neomouvRelease']) {
                doLast {
                    run(extension, buildUpdateDescription)
                }
            }
            //上传totem
            task uploadTotem(group: 'upload2Pgyer', description: '打包上传totem 到蒲公英',
                    dependsOn: ['assembleZ_totemRelease']) {
                doLast {
                    run(extension, buildUpdateDescription)
                }
            }
            //全部打包上传
            task uploadAll(group: 'upload2Pgyer', description: '打包上传VinkaLife 到蒲公英',
                    dependsOn: ['assembleVinkaLifeRelease',
                                'assembleZ_eraddarRelease',
                                'assembleZ_mixteRelease',
                                'assembleZ_neomouvRelease',
                                'assembleZ_totemRelease',
                    ]) {
                doLast {
                    run(extension, buildUpdateDescription)
                }
            }
        }
    }
}
