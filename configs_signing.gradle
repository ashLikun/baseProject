/**
 * 加载签名配置文件
 */
ext.loadSigningConfigs = { project ->
    def Properties props = new Properties()
    def propFile = file('local.properties')
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey('RELEASE_STORE_FILE') && props.containsKey('RELEASE_STORE_PASSWORD') &&
                props.containsKey('RELEASE_KEY_ALIAS') && props.containsKey('RELEASE_KEY_PASSWORD')) {
            project.android.signingConfigs.release.storeFile = file(props['RELEASE_STORE_FILE'])
            project.android.signingConfigs.release.storePassword = props['RELEASE_STORE_PASSWORD']
            project.android.signingConfigs.release.keyAlias = props['RELEASE_KEY_ALIAS']
            project.android.signingConfigs.release.keyPassword = props['RELEASE_KEY_PASSWORD']
            println  "  loadSigningConfigs  release  "
        } else {
            project.android.buildTypes.release.signingConfig = null
            println  "  loadSigningConfigs  release   null "
        }
        if (props != null && props.containsKey('DEBUG_STORE_FILE') && props.containsKey('RELEASE_STORE_PASSWORD') &&
                props.containsKey('RELEASE_KEY_ALIAS') && props.containsKey('RELEASE_KEY_PASSWORD')) {
            project.android.signingConfigs.debug.storeFile = file(props['DEBUG_STORE_FILE'])
            project.android.signingConfigs.debug.storePassword = props['RELEASE_STORE_PASSWORD']
            project.android.signingConfigs.debug.keyAlias = props['RELEASE_KEY_ALIAS']
            project.android.signingConfigs.debug.keyPassword = props['RELEASE_KEY_PASSWORD']
            println  "  loadSigningConfigs  debug "
        } else {
            project.android.buildTypes.debug.signingConfig = null
            println  "  loadSigningConfigs  debug null"
        }
    } else {
        project.android.buildTypes.release.signingConfig = null
    }
}